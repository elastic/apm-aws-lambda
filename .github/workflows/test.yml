name: test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - "ubuntu-latest"
          - "macos-latest"
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Test
        run: make test junitfile="${{ matrix.platform }}-junit-report.xml"
      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: '*-junit-report.xml'
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true
      - name: Build
        run: make dist
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - run: make lint-prep
      - run: make lint
      - run: go vet
  notice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: notice
        run: make check-notice
        
      

