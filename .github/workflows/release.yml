name: release

on:
  push:
    tags:
      - v*.*.*

env:
  DOCKER_BUILDKIT: 1
  DOCKER_REGISTRY: docker.elastic.co
  DOCKER_IMAGE_NAME: observability/apm-lambda-extension

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: elastic/apm-pipeline-library/.github/actions/docker-login@current
        with:
          registry: docker.elastic.co
          secret: secret/observability-team/ci/docker-registry/prod
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
      - uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/observability-team/ci/service-account/apm-aws-lambda access_key_id | AWS_ACCESS_KEY_ID ;
            secret/observability-team/ci/service-account/apm-aws-lambda secret_access_key | AWS_SECRET_ACCESS_KEY

      - name: Bootstrap Action Workspace
        uses: ./.github/actions/bootstrap
        with:
          goreleaser: 'true'

      - name: Release
        run: make release

      - name: generate build provenance (binaries)
        uses: github-early-access/generate-build-provenance@main
        with:
          subject-path: "${{ github.workspace }}/dist/*.*"

      - name: GitHub Release
        run: make release-notes
        env:
          GH_TOKEN: ${{ github.token }}
          VERSION: ${{ github.ref_name }}

      - if: ${{ success() }}
        uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          channel: "#apm-aws-lambda"
          message: |
            :large_green_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* published."
            Build: (<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>)

      - if: ${{ failure() }}
        uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          channel: "#apm-aws-lambda"
          message: |
            :large_yellow_circle: [${{ github.repository }}] Release *${{ github.ref_name }}* could not be published."
            Build: (<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>)
